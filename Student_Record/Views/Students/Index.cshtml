@model X.PagedList.IPagedList<Student_Record.Models.Students>
@using X.PagedList.Mvc.Core;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "Index";
    var successMessage = TempData["SuccessMessage"] as string;
    var errorMessage = TempData["ErrorMessage"] as string;
}

@if (!string.IsNullOrEmpty(successMessage))
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @successMessage
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @errorMessage
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="d-flex justify-content-between align-items-center">
    <h1 class="my-4">Students</h1>
    <div>
        <a class="btn btn-success" asp-action="Create">
            <i class="bi bi-plus-circle"></i> Create New
        </a>
        <a class="btn btn-primary" asp-action="DownloadExcel">
            <i class="bi bi-file-earmark-excel"></i> Download Excel
        </a>
        <a class="btn btn-info" asp-action="ImportExcel">
            <i class="bi bi-file-earmark-arrow-up"></i> Import Excel
        </a>
    </div>
</div>

<form asp-controller="Students" asp-action="Index" method="get" class="mb-3">
    <div class="input-group">
        <input type="text" name="searchString" class="form-control" placeholder="Student Name" value="@ViewData["searchString"]" />
        <button class="btn btn-secondary" type="submit">Filter</button>
    </div>
</form>

<div class="table-responsive">
    <table class="table table-striped table-hover">
        <thead class="thead-dark">
            <tr>
                <th>@Html.DisplayNameFor(model => model[0].StudentName)</th>
                <th>@Html.DisplayNameFor(model => model[0].FatherName)</th>
                <th>@Html.DisplayNameFor(model => model[0].FatherContact)</th>
                <th>@Html.DisplayNameFor(model => model[0].MotherName)</th>
                <th>@Html.DisplayNameFor(model => model[0].MotherContact)</th>
                <th>@Html.DisplayNameFor(model => model[0].DateOfBirth)</th>
                <th>@Html.DisplayNameFor(model => model[0].Gender)</th>
                <th>@Html.DisplayNameFor(model => model[0].ProgrammeEnrolled)</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.StudentName)</td>
                    <td>@Html.DisplayFor(modelItem => item.FatherName)</td>
                    <td>@Html.DisplayFor(modelItem => item.FatherContact)</td>
                    <td>@Html.DisplayFor(modelItem => item.MotherName)</td>
                    <td>@Html.DisplayFor(modelItem => item.MotherContact)</td>
                    <td>@Html.DisplayFor(modelItem => item.DateOfBirth)</td>
                    <td>@Html.DisplayFor(modelItem => item.Gender)</td>
                    <td>@Html.DisplayFor(modelItem => item.ProgrammeEnrolled)</td>
                    <td>
                        <div class="dropdown">
                            <button class="btn btn-secondary btn-sm dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                                Actions
                            </button>
                            <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                <li>
                                    <a class="dropdown-item" asp-action="Edit" asp-route-id="@item.Id" title="Edit">
                                        <i class="bi bi-pencil-square"></i> Edit
                                    </a>
                                </li>
                                <li>
                                    <a class="dropdown-item" asp-action="Details" asp-route-id="@item.Id" title="Details">
                                        <i class="bi bi-info-circle"></i> Details
                                    </a>
                                </li>
                                <li>
                                    <a class="dropdown-item text-danger" asp-action="Delete" asp-route-id="@item.Id" title="Delete">
                                        <i class="bi bi-trash"></i> Delete
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="d-flex justify-content-center">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchString = ViewData["searchString"] }))
</div>
